<?php


$admin = new admin;
$admin->exec();


class admin{
	private $problemArray = array("column" => array(array(5),array(0),array(1,3),array(1,1),array(3)),
			"row" => array(array(1,1),array(1),array(1,1,1),array(1,1,1),array(5)));
	public function exec(){
		$checkLine = new checkLine($this->problemArray);
		$checkLine->setlowest();
		$checkLine->setHighest();
	}
	public function execArrayAll(){
		$allayAll = new allayAll(6,3);
		$theArray = $allayAll->makeTestArray();
		$allayAll->setArray($theArray);
		$allayAll->showArray();
	}
}


class allayAll{
	private $showArray;
	private $rowSize;
	private $lineSize;
	public function __construct($rowSize, $lineSize){
		$this->rowSize = $rowSize;
		$this->lineSize = $lineSize;
	}
	public function setArray($inputArray){
		$this->showArray = $inputArray;
	}
	public function showArray(){
		$showString = '';
		for($i=0; $i < $this->rowSize; $i ++){
			for($j=0; $j < $this->lineSize; $j ++){
				$showString .= $this->showArray[$i][$j];
			}
			$showString .= "\n";
		}
		echo($showString);
	}
	//テスト用配列
	public function makeTestArray(){
		$theArray = array();
		for($i=0; $i < $this->rowSize; $i ++){
			for($j=0; $j < $this->lineSize; $j ++){
				$theArray[$i][$j] = $i + 2 * $j;
			}
		}
		return $theArray;
	}
}
class checkLine{
	private $problemArray;
	private $convertedArray;
	private $answerArray;
	public function __construct($problemArray){
		$this->problemArray = $problemArray;
		
		$initArrays = new initArrays;
		$this->convertedArray = $initArrays->convertProblemArray($problemArray);
		$this->answerArray = $initArrays->initAnswerArray(10, 10);
	}
	public function setLowest(){
		$arrayLength = count($this->answerArray);
		$checkingPoint = 0;
		$comparingValue = $this->convertedArray[$checkingPoint];
		for($nowCount = 0; $nowCount < $arrayLength; $nowCount++){
			if($nowCount >= $comparingValue && $checkingPoint + 1 < count($this->convertedArray)){
				$checkingPoint += 1;
				$comparingValue += $this->convertedArray[$checkingPoint];
			}
			$this->answerArray[$nowCount]['lowest'] = $checkingPoint;
			var_export($this->answerArray[$nowCount]['lowest']);
			echo("checking" . $checkingPoint . " sum" . $comparingValue . " now " . $nowCount . "\n");
		}

	}
	public function setHighest(){
		$arrayLength = count($this->answerArray);
		$checkingPoint = count($this->convertedArray) - 1;
		$comparingValue = $this->convertedArray[$checkingPoint];
		for($nowCount = 0; $nowCount < $arrayLength; $nowCount++){
			if($nowCount >= $comparingValue && $checkingPoint > 0){
				$checkingPoint -= 1;
				$comparingValue += $this->convertedArray[$checkingPoint];
			}
			$this->answerArray[$arrayLength - $nowCount]['lowest'] = $checkingPoint;
			var_export($this->answerArray[$arrayLength - $nowCount]['lowest']);
			echo("checkinghigh" . $checkingPoint . " sum" . $comparingValue . " now " . ($arrayLength - $nowCount) . "\n");
		}
	}
	//const_now
	public function convertArray(){
		return array(2,1,5);
	}
}

class initArrays{
	//const_now
	public function convertProblemArray($problemArray){
		$convertedArray = array();
		$columnLength = count($problemArray["row"]);
		for($i = 0; $i < $columnLength; $i++){
			$arrayLength = count($problemArray["row"][$i]);
			$convertedArray["row"][$i][0] = $problemArray["row"][$i][0];
			for($j = 1; $j < $arrayLength; $j++){
				array_push($convertedArray["row"][$i], 1);
				array_push($convertedArray["row"][$i], $problemArray["row"][$i][$j]);
			}
		}
		$columnLength = count($problemArray["column"]);
		for($i = 0; $i < $columnLength; $i++){
			$arrayLength = count($problemArray["column"][$i]);
			$convertedArray["column"][$i][0] = $problemArray["column"][$i][0];
			for($j = 1; $j < $arrayLength; $j++){
				array_push($convertedArray["column"][$i], 1);
				array_push($convertedArray["column"][$i], $problemArray["column"][$i][$j]);
			}
		}
		var_export($convertedArray);
		var_export($problemArray);
	}
	public function initAnswerArray($rowSize, $lineSize){
		$answerArray = array();
		for($i=0; $i < $rowSize; $i ++){
			for($j=0; $j < $lineSize; $j ++){
				$answerArray[$i][$j] = array();
			}
		}
		return $answerArray;
	}
}