<?php

$admin = new admin;
$admin->exec();


class admin{
	function exec(){
		$allayAll = new allayAll(6,3);
		$theArray = $allayAll->makeTestArray();
		$checkLine = new checkLine($theArray);
		$checkLine->setlowest($theArray);
		$checkLine->setHighest($theArray);
	}
	function execArrayAll(){
		$allayAll = new allayAll(6,3);
		$theArray = $allayAll->makeTestArray();
		$allayAll->setArray($theArray);
		$allayAll->showArray();
	}
}


class allayAll{
	private $showArray;
	private $rowSize;
	private $lineSize;
	function __construct($rowSize, $lineSize){
		$this->rowSize = $rowSize;
		$this->lineSize = $lineSize;
	}
	function setArray($inputArray){
		$this->showArray = $inputArray;
	}
	function showArray(){
		$showString = '';
		for($i=0; $i < $this->rowSize; $i ++){
			for($j=0; $j < $this->lineSize; $j ++){
				$showString .= $this->showArray[$i][$j];
			}
			$showString .= "\n";
		}
		echo($showString);
	}
	//テスト用配列
	function makeTestArray(){
		$theArray = array();
		for($i=0; $i < $this->rowSize; $i ++){
			for($j=0; $j < $this->lineSize; $j ++){
				$theArray[$i][$j] = $i + 2 * $j;
			}
		}
		return $theArray;
	}
}
class checkLine{
	private $problemArray;
	private $convertedArray;
	private $answerArray;
	function __construct($problemArray){
		$this->problemArray = $problemArray;
		$this->convertedArray = $this->convertArray();
		$this->answerArray = $this->initAnswerArray(10, 10);
	}
	function setLowest(){
		$arrayLength = count($this->answerArray);
		$checkingPoint = 0;
		$comparingValue = $this->convertedArray[$checkingPoint];
		for($nowCount = 0; $nowCount < $arrayLength; $nowCount++){
			if($nowCount >= $comparingValue && $checkingPoint + 1 < count($this->convertedArray)){
				$checkingPoint += 1;
				$comparingValue += $this->convertedArray[$checkingPoint];
			}
			$this->answerArray[$nowCount]['lowest'] = $checkingPoint;
			var_export($this->answerArray[$nowCount]['lowest']);
			echo("checking" . $checkingPoint . " sum" . $comparingValue . " now " . $nowCount . "\n");
		}

	}
	function setHighest(){
		$arrayLength = count($this->answerArray);
		$checkingPoint = count($this->convertedArray) - 1;
		$comparingValue = $this->convertedArray[$checkingPoint];
		for($nowCount = 0; $nowCount < $arrayLength; $nowCount++){
			if($nowCount >= $comparingValue && $checkingPoint > 0){
				$checkingPoint -= 1;
				$comparingValue += $this->convertedArray[$checkingPoint];
			}
			$this->answerArray[$arrayLength - $nowCount]['lowest'] = $checkingPoint;
			var_export($this->answerArray[$arrayLength - $nowCount]['lowest']);
			echo("checkinghigh" . $checkingPoint . " sum" . $comparingValue . " now " . ($arrayLength - $nowCount) . "\n");
		}
	}
	function convertArray(){
		return array(2,1,5);
	}
	function initAnswerArray($rowSize, $lineSize){
		$answerArray = array();
		for($i=0; $i < $rowSize; $i ++){
			for($j=0; $j < $lineSize; $j ++){
				$answerArray[$i][$j] = array();
			}
		}
		return $answerArray;
	}
}